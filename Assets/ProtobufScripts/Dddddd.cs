// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/dddddd.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Protos/dddddd.proto</summary>
public static partial class DdddddReflection {

  #region Descriptor
  /// <summary>File descriptor for Protos/dddddd.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static DdddddReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNQcm90b3MvZGRkZGRkLnByb3RvIi4KCnNzc3Nzc3Nzc3MSDgoGc3Nzc3Nz",
          "GAEgASgBEhAKCHh4eHh4eHh4GAIgASgBYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ssssssssss), global::ssssssssss.Parser, new[]{ "Ssssss", "Xxxxxxxx" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///2222222
/// </summary>
public sealed partial class ssssssssss : pb::IMessage<ssssssssss> {
  private static readonly pb::MessageParser<ssssssssss> _parser = new pb::MessageParser<ssssssssss>(() => new ssssssssss());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ssssssssss> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DdddddReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ssssssssss() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ssssssssss(ssssssssss other) : this() {
    ssssss_ = other.ssssss_;
    xxxxxxxx_ = other.xxxxxxxx_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ssssssssss Clone() {
    return new ssssssssss(this);
  }

  /// <summary>Field number for the "ssssss" field.</summary>
  public const int SsssssFieldNumber = 1;
  private double ssssss_;
  /// <summary>
  ///ssss
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Ssssss {
    get { return ssssss_; }
    set {
      ssssss_ = value;
    }
  }

  /// <summary>Field number for the "xxxxxxxx" field.</summary>
  public const int XxxxxxxxFieldNumber = 2;
  private double xxxxxxxx_;
  /// <summary>
  ///ss
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Xxxxxxxx {
    get { return xxxxxxxx_; }
    set {
      xxxxxxxx_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ssssssssss);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ssssssssss other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Ssssss, other.Ssssss)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Xxxxxxxx, other.Xxxxxxxx)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Ssssss != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Ssssss);
    if (Xxxxxxxx != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Xxxxxxxx);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Ssssss != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(Ssssss);
    }
    if (Xxxxxxxx != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Xxxxxxxx);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Ssssss != 0D) {
      size += 1 + 8;
    }
    if (Xxxxxxxx != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ssssssssss other) {
    if (other == null) {
      return;
    }
    if (other.Ssssss != 0D) {
      Ssssss = other.Ssssss;
    }
    if (other.Xxxxxxxx != 0D) {
      Xxxxxxxx = other.Xxxxxxxx;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Ssssss = input.ReadDouble();
          break;
        }
        case 17: {
          Xxxxxxxx = input.ReadDouble();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
